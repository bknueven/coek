# TODO
# Formulated in pyomo by Logan Barnes and Gabe Hackebeil.
#
# Taken from CUTE models

import poek as pk


model = pk.model()

N = list(range(1,8))
a = .5
l = {}
l[1] = 0.1
l[2] = 0.1
l[3] = 0.1
l[4] = 0.1
l[5] = 0.1
l[6] = 0.1
l[7] = 0.01

x = model.add_variable(index=N, ub=10, value=6.0)
for i in N:
    x[i].lb = l[i]

model.add_objective( 10.0*x[1]*x[4]**2*x[7]**a/(x[2]*x[6]**3)+15.0*x[3]\
         *x[4]/(x[1]*x[2]**2*x[5]*x[7]**0.5)+20.0*x[2]*x[6]/(x[1]**2*x[4]*x[5]**2)\
         +25.0*x[1]**2*x[2]**2*x[5]**0.5*x[7]/(x[3]*x[6]**2))

model.add_constraint( 1.0-.5*x[1]**0.5*x[7]/(x[3]*x[6]**2)-.7*x[1]**3*x[2]*x[6]*x[7]**.5/x[3]**2\
         -.2*x[3]*x[6]**(2.0/3.0)*x[7]**.25/(x[2]*x[4]**.5)>=0)
         
model.add_constraint( 1.0-1.3*x[2]*x[6]/(x[1]**.5*x[3]*x[5])-.8*x[3]*x[6]**2/(x[4]*x[5])
         -3.1*x[2]**.5*x[6]**(1.0/3.0)/(x[1]*x[4]**2*x[5])>=0)

model.add_constraint( 1.0-2.0*x[1]*x[5]*x[7]**(1.0/3.0)/(x[3]**1.5*x[6])-.1*x[2]*x[5]/\
         (x[3]**.5*x[6]*x[7]**.5)-x[2]*x[3]**.5*x[5]/x[1]-\
         .65*x[3]*x[5]*x[7]/(x[2]**2*x[6])>=0)

model.add_constraint( 1.0-.2*x[2]*x[5]**.5*x[7]**(1.0/3.0)/(x[1]**2*x[4])-.3*x[1]**.5*x[2]**2\
         *x[3]*x[4]**(1.0/3.0)*x[7]**.25/x[5]**(2.0/3.0)-.4*x[3]*x[5]*x[7]**.75/\
         (x[1]**3*x[2]**2)-.5*x[4]*x[7]**.5/x[3]**2>=0)
         
model.add_constraint( 10.0*x[1]*x[4]**2*x[7]**a/(x[2]*x[6]**3)+15*x[3]\
         *x[4]/(x[1]*x[2]**2*x[5]*x[7]**0.5)+20*x[2]*x[6]/(x[1]**2*x[4]*x[5]**2)\
         +25*x[1]**2*x[2]**2*x[5]**0.5*x[7]/(x[3]*x[6]**2)>=100.0)

model.add_constraint( 10*x[1]*x[4]**2*x[7]**a/(x[2]*x[6]**3)+15*x[3]
         *x[4]/(x[1]*x[2]**2*x[5]*x[7]**0.5)+20*x[2]*x[6]/(x[1]**2*x[4]*x[5]**2)
         +25*x[1]**2*x[2]**2*x[5]**0.5*x[7]/(x[3]*x[6]**2)<=3000.0)
