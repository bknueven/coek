
#ifndef __expr_api_h
#define __expr_api_h


/* Declaration of C expression API functions */

void* misc_getnull(void);
double misc_getnan(void);
//void coek_initialize(void);
//void coek_finalize(void);

void* misc_getnull(void);
double misc_getnan(void);

void* parameter_create(double value, const char* name);
void parameter_delete(void* arg);
const char* parameter_get_name(void* arg);
void parameter_set_value(void* arg, double value);
double parameter_get_value(void* arg);
void* parameter__abs__(void* arg);
void* parameter__neg__(void* arg);
void* parameter__add__expression(void* arg, void* rhs);
void* parameter__add__variable(void* arg, void* rhs);
void* parameter__add__parameter(void* arg, void* rhs);
void* parameter__add__int(void* arg, int rhs);
void* parameter__add__double(void* arg, double rhs);
void* parameter__radd__int(void* arg, int lhs);
void* parameter__radd__double(void* arg, double lhs);
void* parameter__sub__expression(void* arg, void* rhs);
void* parameter__sub__variable(void* arg, void* rhs);
void* parameter__sub__parameter(void* arg, void* rhs);
void* parameter__sub__int(void* arg, int rhs);
void* parameter__sub__double(void* arg, double rhs);
void* parameter__rsub__int(void* arg, int lhs);
void* parameter__rsub__double(void* arg, double lhs);
void* parameter__mul__expression(void* arg, void* rhs);
void* parameter__mul__variable(void* arg, void* rhs);
void* parameter__mul__parameter(void* arg, void* rhs);
void* parameter__mul__int(void* arg, int rhs);
void* parameter__mul__double(void* arg, double rhs);
void* parameter__rmul__int(void* arg, int lhs);
void* parameter__rmul__double(void* arg, double lhs);
void* parameter__div__expression(void* arg, void* rhs);
void* parameter__div__variable(void* arg, void* rhs);
void* parameter__div__parameter(void* arg, void* rhs);
void* parameter__div__int(void* arg, int rhs);
void* parameter__div__double(void* arg, double rhs);
void* parameter__rdiv__int(void* arg, int lhs);
void* parameter__rdiv__double(void* arg, double lhs);
void* parameter__pow__expression(void* arg, void* rhs);
void* parameter__pow__variable(void* arg, void* rhs);
void* parameter__pow__parameter(void* arg, void* rhs);
void* parameter__pow__int(void* arg, int rhs);
void* parameter__pow__double(void* arg, double rhs);
void* parameter__rpow__int(void* arg, int lhs);
void* parameter__rpow__double(void* arg, double lhs);
void* parameter__lt__expression(void* arg, void* rhs);
void* parameter__lt__variable(void* arg, void* rhs);
void* parameter__lt__parameter(void* arg, void* rhs);
void* parameter__lt__int(void* arg, int rhs);
void* parameter__lt__double(void* arg, double rhs);
void* parameter__le__expression(void* arg, void* rhs);
void* parameter__le__variable(void* arg, void* rhs);
void* parameter__le__parameter(void* arg, void* rhs);
void* parameter__le__int(void* arg, int rhs);
void* parameter__le__double(void* arg, double rhs);
void* parameter__gt__expression(void* arg, void* rhs);
void* parameter__gt__variable(void* arg, void* rhs);
void* parameter__gt__parameter(void* arg, void* rhs);
void* parameter__gt__int(void* arg, int rhs);
void* parameter__gt__double(void* arg, double rhs);
void* parameter__ge__expression(void* arg, void* rhs);
void* parameter__ge__variable(void* arg, void* rhs);
void* parameter__ge__parameter(void* arg, void* rhs);
void* parameter__ge__int(void* arg, int rhs);
void* parameter__ge__double(void* arg, double rhs);
void* parameter__eq__expression(void* arg, void* rhs);
void* parameter__eq__variable(void* arg, void* rhs);
void* parameter__eq__parameter(void* arg, void* rhs);
void* parameter__eq__int(void* arg, int rhs);
void* parameter__eq__double(void* arg, double rhs);

void* variable_create(double lb, double ub, double init, bool binary, bool integer, const char* name);
void variable_delete(void* arg);
const char* variable_get_name(void* arg);
void variable_set_value(void* arg, double value);
double variable_get_value(void* arg);
void variable_set_initial(void* arg, double value);
double variable_get_initial(void* arg);
void variable_set_lb(void* arg, double value);
double variable_get_lb(void* arg);
void variable_set_ub(void* arg, double value);
double variable_get_ub(void* arg);
void variable_set_fixed(void* arg, bool value);
bool variable_get_fixed(void* arg);
void* variable__abs__(void* arg);
void* variable__neg__(void* arg);
void* variable__add__expression(void* arg, void* rhs);
void* variable__add__variable(void* arg, void* rhs);
void* variable__add__parameter(void* arg, void* rhs);
void* variable__add__int(void* arg, int rhs);
void* variable__add__double(void* arg, double rhs);
void* variable__radd__int(void* arg, int lhs);
void* variable__radd__double(void* arg, double lhs);
void* variable__sub__expression(void* arg, void* rhs);
void* variable__sub__variable(void* arg, void* rhs);
void* variable__sub__parameter(void* arg, void* rhs);
void* variable__sub__int(void* arg, int rhs);
void* variable__sub__double(void* arg, double rhs);
void* variable__rsub__int(void* arg, int lhs);
void* variable__rsub__double(void* arg, double lhs);
void* variable__mul__expression(void* arg, void* rhs);
void* variable__mul__variable(void* arg, void* rhs);
void* variable__mul__parameter(void* arg, void* rhs);
void* variable__mul__int(void* arg, int rhs);
void* variable__mul__double(void* arg, double rhs);
void* variable__rmul__int(void* arg, int lhs);
void* variable__rmul__double(void* arg, double lhs);
void* variable__div__expression(void* arg, void* rhs);
void* variable__div__variable(void* arg, void* rhs);
void* variable__div__parameter(void* arg, void* rhs);
void* variable__div__int(void* arg, int rhs);
void* variable__div__double(void* arg, double rhs);
void* variable__rdiv__int(void* arg, int lhs);
void* variable__rdiv__double(void* arg, double lhs);
void* variable__pow__expression(void* arg, void* rhs);
void* variable__pow__variable(void* arg, void* rhs);
void* variable__pow__parameter(void* arg, void* rhs);
void* variable__pow__int(void* arg, int rhs);
void* variable__pow__double(void* arg, double rhs);
void* variable__rpow__int(void* arg, int lhs);
void* variable__rpow__double(void* arg, double lhs);
void* variable__lt__expression(void* arg, void* rhs);
void* variable__lt__variable(void* arg, void* rhs);
void* variable__lt__parameter(void* arg, void* rhs);
void* variable__lt__int(void* arg, int rhs);
void* variable__lt__double(void* arg, double rhs);
void* variable__le__expression(void* arg, void* rhs);
void* variable__le__variable(void* arg, void* rhs);
void* variable__le__parameter(void* arg, void* rhs);
void* variable__le__int(void* arg, int rhs);
void* variable__le__double(void* arg, double rhs);
void* variable__gt__expression(void* arg, void* rhs);
void* variable__gt__variable(void* arg, void* rhs);
void* variable__gt__parameter(void* arg, void* rhs);
void* variable__gt__int(void* arg, int rhs);
void* variable__gt__double(void* arg, double rhs);
void* variable__ge__expression(void* arg, void* rhs);
void* variable__ge__variable(void* arg, void* rhs);
void* variable__ge__parameter(void* arg, void* rhs);
void* variable__ge__int(void* arg, int rhs);
void* variable__ge__double(void* arg, double rhs);
void* variable__eq__expression(void* arg, void* rhs);
void* variable__eq__variable(void* arg, void* rhs);
void* variable__eq__parameter(void* arg, void* rhs);
void* variable__eq__int(void* arg, int rhs);
void* variable__eq__double(void* arg, double rhs);

void* expression_create();
void expression_delete(void* arg);
double expression_get_value(void* arg);
void* expression__abs__(void* arg);
void* expression__neg__(void* arg);
void* expression__add__expression(void* arg, void* rhs);
void* expression__add__variable(void* arg, void* rhs);
void* expression__add__parameter(void* arg, void* rhs);
void* expression__add__int(void* arg, int rhs);
void* expression__add__double(void* arg, double rhs);
void* expression__radd__int(void* arg, int lhs);
void* expression__radd__double(void* arg, double lhs);
void* expression__sub__expression(void* arg, void* rhs);
void* expression__sub__variable(void* arg, void* rhs);
void* expression__sub__parameter(void* arg, void* rhs);
void* expression__sub__int(void* arg, int rhs);
void* expression__sub__double(void* arg, double rhs);
void* expression__rsub__int(void* arg, int lhs);
void* expression__rsub__double(void* arg, double lhs);
void* expression__mul__expression(void* arg, void* rhs);
void* expression__mul__variable(void* arg, void* rhs);
void* expression__mul__parameter(void* arg, void* rhs);
void* expression__mul__int(void* arg, int rhs);
void* expression__mul__double(void* arg, double rhs);
void* expression__rmul__int(void* arg, int lhs);
void* expression__rmul__double(void* arg, double lhs);
void* expression__div__expression(void* arg, void* rhs);
void* expression__div__variable(void* arg, void* rhs);
void* expression__div__parameter(void* arg, void* rhs);
void* expression__div__int(void* arg, int rhs);
void* expression__div__double(void* arg, double rhs);
void* expression__rdiv__int(void* arg, int lhs);
void* expression__rdiv__double(void* arg, double lhs);
void* expression__pow__expression(void* arg, void* rhs);
void* expression__pow__variable(void* arg, void* rhs);
void* expression__pow__parameter(void* arg, void* rhs);
void* expression__pow__int(void* arg, int rhs);
void* expression__pow__double(void* arg, double rhs);
void* expression__rpow__int(void* arg, int lhs);
void* expression__rpow__double(void* arg, double lhs);
void* expression__lt__expression(void* arg, void* rhs);
void* expression__lt__variable(void* arg, void* rhs);
void* expression__lt__parameter(void* arg, void* rhs);
void* expression__lt__int(void* arg, int rhs);
void* expression__lt__double(void* arg, double rhs);
void* expression__le__expression(void* arg, void* rhs);
void* expression__le__variable(void* arg, void* rhs);
void* expression__le__parameter(void* arg, void* rhs);
void* expression__le__int(void* arg, int rhs);
void* expression__le__double(void* arg, double rhs);
void* expression__gt__expression(void* arg, void* rhs);
void* expression__gt__variable(void* arg, void* rhs);
void* expression__gt__parameter(void* arg, void* rhs);
void* expression__gt__int(void* arg, int rhs);
void* expression__gt__double(void* arg, double rhs);
void* expression__ge__expression(void* arg, void* rhs);
void* expression__ge__variable(void* arg, void* rhs);
void* expression__ge__parameter(void* arg, void* rhs);
void* expression__ge__int(void* arg, int rhs);
void* expression__ge__double(void* arg, double rhs);
void* expression__eq__expression(void* arg, void* rhs);
void* expression__eq__variable(void* arg, void* rhs);
void* expression__eq__parameter(void* arg, void* rhs);
void* expression__eq__int(void* arg, int rhs);
void* expression__eq__double(void* arg, double rhs);

void constraint_delete(void* arg);
double constraint_get_value(void* arg);
double constraint_is_feasible(void* arg);

void* ceil_Expression(void* arg);
void* ceil_Variable(void* arg);
void* ceil_Parameter(void* arg);
void* floor_Expression(void* arg);
void* floor_Variable(void* arg);
void* floor_Parameter(void* arg);
void* exp_Expression(void* arg);
void* exp_Variable(void* arg);
void* exp_Parameter(void* arg);
void* log_Expression(void* arg);
void* log_Variable(void* arg);
void* log_Parameter(void* arg);
void* log10_Expression(void* arg);
void* log10_Variable(void* arg);
void* log10_Parameter(void* arg);
void* sqrt_Expression(void* arg);
void* sqrt_Variable(void* arg);
void* sqrt_Parameter(void* arg);

void* sin_Expression(void* arg);
void* sin_Variable(void* arg);
void* sin_Parameter(void* arg);
void* cos_Expression(void* arg);
void* cos_Variable(void* arg);
void* cos_Parameter(void* arg);
void* tan_Expression(void* arg);
void* tan_Variable(void* arg);
void* tan_Parameter(void* arg);
void* asin_Expression(void* arg);
void* asin_Variable(void* arg);
void* asin_Parameter(void* arg);
void* acos_Expression(void* arg);
void* acos_Variable(void* arg);
void* acos_Parameter(void* arg);
void* atan_Expression(void* arg);
void* atan_Variable(void* arg);
void* atan_Parameter(void* arg);

void* sinh_Expression(void* arg);
void* sinh_Variable(void* arg);
void* sinh_Parameter(void* arg);
void* cosh_Expression(void* arg);
void* cosh_Variable(void* arg);
void* cosh_Parameter(void* arg);
void* tanh_Expression(void* arg);
void* tanh_Variable(void* arg);
void* tanh_Parameter(void* arg);
void* asinh_Expression(void* arg);
void* asinh_Variable(void* arg);
void* asinh_Parameter(void* arg);
void* acosh_Expression(void* arg);
void* acosh_Variable(void* arg);
void* acosh_Parameter(void* arg);
void* atanh_Expression(void* arg);
void* atanh_Variable(void* arg);
void* atanh_Parameter(void* arg);

void* pow_Parameter_Expression(void* arg, void* arg2);
void* pow_Parameter_Variable(void* arg, void* arg2);
void* pow_Parameter_Parameter(void* arg, void* arg2);
void* pow_Variable_Expression(void* arg, void* arg2);
void* pow_Variable_Variable(void* arg, void* arg2);
void* pow_Variable_Parameter(void* arg, void* arg2);
void* pow_Expression_Expression(void* arg, void* arg2);
void* pow_Expression_Variable(void* arg, void* arg2);
void* pow_Expression_Parameter(void* arg, void* arg2);

