#!/usr/bin/env python
#
# poek_solve0 [-d] <solver> <model> [<data> ...]
#

import sys
import os.path
import poek as pk

sys.path.insert(1, os.path.dirname(os.path.abspath(__file__)) )
from models import create_instance, print_help

if len(sys.argv) == 1:
    print("poek_writer [-d] <solver> <model> [<data> ...]")
    print_help()
    sys.exit(1)

i=1
if sys.argv[i] == '-d':
    debug=True
    i += 1
else:
    debug=False
solver = sys.argv[i]
i += 1
model = sys.argv[i]
i += 1
data = [int(val) for val in sys.argv[i:]]

instance = create_instance(model, data)
if instance is None:
    print("Unknown poek model '%s'" % model)
    sys.exit(1)

opt = pk.solver(solver)
if not opt.available:
    print("Unknown solver '%s'" % solver)
    sys.exit(1)

if solver == 'gurobi':
    opt.set_option('TimeLimit', 0)
elif solver == 'ipopt':
    opt.set_option('max_iter', 0)
    opt.set_option('print_level', debug*5)

opt.solve(instance)
